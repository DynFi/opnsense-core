#!/usr/local/bin/php
<?php

/*
 * Copyright (C) 2006 Scott Ullrich <sullrich@gmail.com>
 * Copyright (C) 2003-2005 Manuel Kasper <mk@neon1.net>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

require_once("config.inc");
require_once("auth.inc");
require_once("filter.inc");
require_once("services.inc");
require_once("rrd.inc");
require_once("util.inc");
require_once("system.inc");
require_once("interfaces.inc");

// Do not process while booting
if (file_exists('/var/run/booting')) {
    return;
}

/* Interface IP address has changed */
$argument = trim($argv[1], " \n\t");

log_error("Informational is starting '{$argument}'");

if (empty($argument)) {
    $interface = "wan";
    $interface_real = get_real_interface($interface, "inet6");
    $curwanipv6 = get_interface_ipv6($interface, true);
} else {
    $interface_real = $argument;
    $interface = convert_real_interface_to_friendly_interface_name($interface_real);
    $curwanipv6 = get_interface_ipv6($interface, true);
}

/* If the interface is configured and not enabled, bail. We do not need to change settings for disabled interfaces. #3313 */
if (!isset($config['interfaces'][$interface]['enable'])) {
    log_error("Interface is disabled or empty, nothing to do.");
    return;
}

$interface_descr = convert_friendly_interface_to_friendly_descr($interface);

log_error("On (IP address: {$curwanipv6}) (interface: {$interface_descr}[{$interface}]) (real interface: {$interface_real}).");

/*
 * NOTE: Take care of openvpn and similar if you generate the event to reconfigure an interface.
 *    i.e. OpenVPN might be in tap mode and not have an ip.
 */
if ((empty($curwanipv6) || !is_ipaddrv6($curwanipv6)) && substr($interface_real, 0, 4) != "ovpn") {
    log_error("Failed to detect IPv6 for {$interface_descr}[{$interface}]");
    return;
}

$new_domain_name_servers = getenv("new_domain_name_servers");
if (!empty($new_domain_name_servers)) {
    $name_servers = explode(" ", $new_domain_name_servers);
    $valid_ns = array();
    foreach($name_servers as $ns) {
        if (is_ipaddrv6(trim($ns)))
            $valid_ns[] = trim($ns);
    }

    if (count($valid_ns) > 0) {
        @file_put_contents("/var/etc/nameserver_v6{$interface}", implode("\n", $valid_ns));
    }
}
$new_domain_name = getenv("new_domain_name");
if (!empty($new_domain_name)) {
    @file_put_contents("/var/etc/searchdomain_v6{$interface}", $new_domain_name);
}

/* write current WAN IPv6 to file */
if (is_ipaddrv6($curwanipv6)) {
    @file_put_contents("/var/db/{$interface}_ipv6", $curwanipv6);
}

$oldipv6 = @file_get_contents("/var/db/{$interface}_cacheipv6");

$grouptmp = link_interface_to_group($interface);
if (!empty($grouptmp)) {
    array_walk($grouptmp, 'interface_group_add_member');
}

link_interface_to_track6($interface, "update");
system_resolvconf_generate();
system_hosts_generate();

/*
 * We need to force sync VPNs on such even when the IP is the same for dynamic interfaces.
 * Even with the same IP the VPN software is unhappy with the IP disappearing, and we
 * could be failing back in which case we need to switch IPs back anyhow.
 */
if (!is_ipaddrv6($oldipv6) || $curwanipv6 != $oldipv6 || !is_ipaddrv6($config['interfaces'][$interface]['ipaddrv6'])) {
    system_routing_configure($interface);
    setup_gateways_monitor();

    if ($curwanipv6 == $oldipv6) {
        if (in_array($config['interfaces'][$interface]['ipaddrv6'], array('pppoe', 'pptp', 'ppp'))) {
            /* PPP reconnect loop avoidance */
            return;
        }
    } elseif (is_ipaddrv6($oldipv6)) {
        if (does_interface_exist($interface_real)) {
            mwexec("/sbin/ifconfig {$interface_real} inet6 {$oldipv6} delete");
        }
    }

    if (is_ipaddrv6($curwanipv6)) {
        @file_put_contents("/var/db/{$interface}_cacheipv6", $curwanipv6);
    }

    plugins_configure('vpn', false, array($interface));
    plugins_configure('newwanip', false, array($interface));
    rrd_configure();
}

/* reload filter, don't try to sync to carp slave */
filter_configure_sync();
